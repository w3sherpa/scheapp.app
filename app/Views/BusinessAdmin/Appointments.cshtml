@model scheapp.app.Models.View.AppointmentsVM
@{
    Layout = "_BusinessLayout";
    // string TodayChecked = (Model.IsTodaySelected ? "checked" : "");
    // string AllDatesChecked = (Model.IsAllDateSelected ? "checked" : "");
    // string selectedDate = (Model.IsDateSelected ? Model.SelectedDate.ToString() : "");
}
<div class="text-center">
    <div class="row">
        <div class="col-4">
            <input id="chkbxAppointmentsToday" class="" type="checkbox" value=""  onchange="TodayCheckboxCheck()">
            <label class="form-check-label" for="flexCheckDefault">
               Today
            </label>
        </div>
        <div class="col-4">
            <input id="chkbxAppointmentsAllDate" class="f" type="checkbox" value="" onchange="AllDateCheckboxCheck()">
            <label class="form-check-label" for="flexCheckDefault">
                All Date
            </label>
        </div>
        <div class="col-4">
            <input id="txtbxAppointmentsSelectedDate" class="form-control" type="date" onchange="AppointmentsFilterByDate()" />
        </div>
    </div>
    <div id="div_DisplayAppointmentList"  class="row">

    </div>
    @* @await Html.PartialAsync("_ScheAppCard", Model.Appointments) *@
</div>


<script>
    $(function () {
        $("#chkbxAppointmentsToday").prop("checked", true);
        LoadScheduledAppointments(@Html.Raw(Model.BusinessId),GetToday());
    });

    var connection = new signalR.HubConnectionBuilder().withUrl("/ScheAppViewUpdateHub",{  
        skipNegotiation: true,
        transport: signalR.HttpTransportType.WebSockets
    }).build();
    connection.on("UpdateAppointmentsView", function (conversation_uuid, status) {
        LoadScheduledAppointments(@Html.Raw(Model.BusinessId),GetToday());
    });
    connection.start();
    function TodayCheckboxCheck() {
        $("#chkbxAppointmentsAllDate").prop("checked", false);
        LoadScheduledAppointments(@Html.Raw(Model.BusinessId), GetToday());
    }
    function AllDateCheckboxCheck() {
        $("#chkbxAppointmentsToday").prop("checked", false);
        LoadScheduledAppointments(@Html.Raw(Model.BusinessId), null);
    }
    function AppointmentsFilterByDate(chkboxID) {
        $("#chkbxAppointmentsToday").prop("checked", false);
        $("#chkbxAppointmentsAllDate").prop("checked", false);
        let selDate = $("#txtbxAppointmentsSelectedDate").val();
        LoadScheduledAppointments(@Html.Raw(Model.BusinessId),selDate);
    }

    function GetAppointmentDispalyCard(appointment) {
        var newAppoitmentCardHtml = 
            '<div class="col-md-6 mt-2 col-lg-4 column">'+
                '<div class="card p-1 gr-1">'+
                    '<div class="txt">'+
                        '<div class="row">'+
                            '<div class="col-4">'+
                                '<div class="user-pic">'+
                                '<img class="img-responsive img-rounded" src="/images/user-01.jpg" alt="User picture">'+
                                '</div>' +
                                '<div> ' +
            '<h6>' + appointment.customer+ '</h6>' +
                                '</div>' +
                            '</div>' +
                            '<div class="col-8">' +
            '<h5>' + appointment.serviceName + '</h5>' +
            '<h5>' + appointment.startDT + '</h5>' +
                                '<span>Note for a professional goes here</span>' +
                            '</div>' +
                        '</div>' +
                    '</div>' +
            '<a href="#" onclick="scheappadmin.NotifyCustomer(' + appointment.scheduleAppointmentId + ')">I am ready</a>' +
                    '<div class="ico-card">' +
                        '<i class="fa fa-cut"></i>' +
                    '</div>' +
                '</div>' +
            '</div>'
        // console.log(newAppoitmentCardHtml);
        return newAppoitmentCardHtml;
    }
    function LoadScheduledAppointments(businessId,appointmentsDate) {

        var reqObj = new Object();
        reqObj.BusinessId = businessId;
        reqObj.AppointmentDate = appointmentsDate; GetToday();
         $.ajax({
            'url': '/AdminData/GetProfessionalScheduleAppointmentRequestsDetails',
            'contentType': "application/json",
            'type': 'POST',
            'data': JSON.stringify(reqObj),
            'success': function (response) {
                let apppointmentCardsHTML = '';
                response.appointments.forEach((a,i) => apppointmentCardsHTML +=  GetAppointmentDispalyCard(a))
                $("#div_DisplayAppointmentList").html(apppointmentCardsHTML)
            },
            'error': function (request, error) {
                alert("Request: " + JSON.stringify(request));
            }
        });
    }

    function GetToday() {
        var today = new Date();
        var dd = String(today.getDate()).padStart(2, '0');
        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
        var yyyy = today.getFullYear();

        // return today;
        return yyyy + '-' + mm + '-' + dd;
    }
</script> 
