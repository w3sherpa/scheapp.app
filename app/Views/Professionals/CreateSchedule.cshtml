@model scheapp.app.Models.View.CreateProfessionalScheduleVM
@using scheapp.app.Models.Data.DspModels
@{
    ProfessionalBusinessDetailDsp businessProfessional = (ProfessionalBusinessDetailDsp)ViewBag.BusinessProfessional;
    ViewData["Title"] = "Schedules";
    if (businessProfessional.ProfessionalRole == "business_admin")
    {
        Layout = "_BusinessLayout";
    }
    else if (businessProfessional.ProfessionalRole == "business_professional")
    {
        Layout = "_ProfessionalLayout";
    }
}

<h1>Create Schedule For</h1>

<h4>@Model.FirstName @Model.LastName</h4>

<link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" rel="stylesheet">
<style>
    #filters {
        margin-bottom: 10px;
    }

/*     #calendar {
        background-color: #1e1e1e;
        color: white;
    }

    .fc-toolbar {
        background-color: #333333;
        color: white;
    }

    .fc-daygrid-day {
        background-color: #1d1d1d;
        color: #bbb;
    }

        .fc-daygrid-day:hover {
            background-color: #444;
        }

    .fc-daygrid-day-number {
        color: white;
    }

    .fc-daygrid-event {
        background-color: #4c8bf5;
        color: white;
    }

        .fc-daygrid-event:hover {
            background-color: #3b6bdb;
        }

    .fc-popover {
        background-color: #1e1e1e;
        color: white;
    } */

</style>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Modal title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="d-flex justify-content-center mb-3"><span style="width:100px">Start Time: </span><input class="form-control" type="time" id="start-time-picker"></div>
                <div class="d-flex justify-content-center"><span style="width:100px">End Time:  </span><input class="form-control" type="time" id="end-time-picker"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>
<div class="p-3" >
    <nav>
        <div class="nav nav-tabs mb-3" id="nav-tab" role="tablist">
            <button class="nav-link active" id="nav-home-tab" data-bs-toggle="tab" data-bs-target="#nav-home" type="button" role="tab" aria-controls="nav-home" aria-selected="true">Calendar</button>
            <button class="nav-link" id="nav-profile-tab" data-bs-toggle="tab" data-bs-target="#nav-profile" type="button" role="tab" aria-controls="nav-profile" aria-selected="false">Custom</button>
        </div>
    </nav>
    <div class="tab-content p-3 border" id="nav-tabContent">
        <div class="tab-pane fade active show" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">
            <div class="d-md-flex d-none  mt-1 mb-3 justify-content-around" id="filters">
                <label><input type="checkbox" class="day-toggle" value="0" checked> Sunday</label>
                <label><input type="checkbox" class="day-toggle" value="1" checked> Monday</label>
                <label><input type="checkbox" class="day-toggle" value="2" checked> Tuesday</label>
                <label><input type="checkbox" class="day-toggle" value="3" checked> Wednesday</label>
                <label><input type="checkbox" class="day-toggle" value="4" checked> Thursday</label>
                <label><input type="checkbox" class="day-toggle" value="5" checked> Friday</label>
                <label><input type="checkbox" class="day-toggle" value="6" checked> Saturday</label>
            </div>
            <div class="d-flex d-md-none mt-1 mb-4 justify-content-around" id="filters">
                <label><input type="checkbox" class="day-toggle" value="0" checked> Sun</label>
                <label><input type="checkbox" class="day-toggle" value="1" checked> Mon</label>
                <label><input type="checkbox" class="day-toggle" value="2" checked> Tue</label>
                <label><input type="checkbox" class="day-toggle" value="3" checked> Wed</label>
                <label><input type="checkbox" class="day-toggle" value="4" checked> Thu</label>
                <label><input type="checkbox" class="day-toggle" value="5" checked> Fri</label>
                <label><input type="checkbox" class="day-toggle" value="6" checked> Sat</label>
            </div>
            <div id="calendar"></div>
        </div>
        <div class="tab-pane fade" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">
            <div class="row">
                <div class="col-md-4">
                    @Html.HiddenFor(Model => Model.BusinessId, new { Id = "hdnBusinessId_CreateSchedule" })
                    @Html.HiddenFor(Model => Model.ProfessionalId, new { Id = "hdnProfessionalId_CreateSchedule" })
                    <div class="form-group mb-4">
                        <label>Start Date & Time: <input class="form-control mt-2" type="datetime" id="start-datetime-picker" onchange="Validate_CreateSchedule()"></label>
                    </div>
                    <div class="form-group mb-4">
                        <label>End Date & Time: <input class="form-control mt-2" type="text" id="end-datetime-picker" onchange="Validate_CreateSchedule()"></label>
                    </div>
                </div>
                <div class="form-group">
                    <input type="submit" id="btnSubmit_CreateSchedule" value="Create" onclick="ConfirmAndCreate();" class="btn btn-primary" disabled />
                </div>
            </div>
        </div>
        </div>
    </div>
</div>



<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

<script>
    var startDate;
    var endDate;
    var startTime;
    var endTime;
    function Validate_CreateSchedule() {
        startDateTime = $("#start-datetime-picker").val();
        endDateTime = $("#end-datetime-picker").val();
        if (startDateTime !== "" && endDateTime != "" ) {
            if (startDateTime < endDateTime)
                $("#btnSubmit_CreateSchedule").removeAttr("disabled");
            else {
                Swal.fire({
                    title: "Start datetime cannot be equal or after end datetime.",
                    text: "Please enter start datetime before end datetime.",
                    icon: "error"
                });
                $("#btnSubmit_CreateSchedule").prop('disabled', true);
            }
        }
    }
    function ConfirmAndCreate(proScheId) {
        Swal.fire({
            title: "Are you sure?",
            text: "You will be adding new availability to schedule appointment system!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, create it!"
        }).then((result) => {
            if (result.isConfirmed) {
                var reqObj = new Object();
                reqObj.BusinessId = $("#hdnBusinessId_CreateSchedule").val();
                reqObj.ProfessionalId = $("#hdnProfessionalId_CreateSchedule").val();
                reqObj.StartDateTime = startDateTime;
                reqObj.EndDateTime = endDateTime;
                reqObj.DaysOfWeek = '';
                console.log(reqObj)
                $.ajax({
                        'url': '/ProfessionalsData/SaveProfessionalSchedules',
                        'contentType': "application/json",
                        'type': 'POST',
                        'data': JSON.stringify(reqObj),
                        'success': function () {
                                        Swal.fire({
                                            position: "top-end",
                                            icon: "success",
                                            title: "New schedule created",
                                            showConfirmButton: false,
                                            timer: 1500
                                        }).then(function () {
                                            window.location.href = "/Professionals/Schedules?businessId=" + reqObj.BusinessId + "&professionalId=" + reqObj.ProfessionalId + ""
                                        });
                                    },
                        'error': function (request, error) {
                            alert("Request: " + JSON.stringify(request));
                        }
                    });
            }
        });
    }
    
    //full-calendar
    flatpickr("#start-datetime-picker", {
      enableTime: true,
      dateFormat: "Y-m-d H:i",
      defaultDate: new Date(),
      onChange: function(selectedDates) {
        if (selectedDates.length > 0) {
          console.log(selectedDates[0].toLocaleString());
        }
      }
    });
    flatpickr("#end-datetime-picker", {
      enableTime: true,
      dateFormat: "Y-m-d H:i",
      defaultDate: new Date(),
      onChange: function(selectedDates) {
        if (selectedDates.length > 0) {
           console.log(selectedDates[0]);
        }
      }
    });

    // Initial visible days
    let visibleDays = [0,1,2,3,4,5,6];

    // Initialize FullCalendar
    let selectedDates = new Set();
    let calendar = new FullCalendar.Calendar(document.getElementById('calendar'), {
      themeSystem: 'bootstrap',
      initialView: 'dayGridMonth',
      selectable: true,
      headerToolbar: {
        left: 'prev,next today',
        center: 'title',
        right: 'timeGridWeek,dayGridMonth'
      },
      slotMinTime: "07:00:00",
      slotMaxTime: "21:00:00",
      hiddenDays: [],
      selectable: true,
            unselectAuto: false,
            longPressDelay: 0,
            selectMirror: true,
            height: 'auto',
            eventClick: function (arg) {
                console.log('event clicked:' + new Date());
                var multipleDaysMode = $("#btnEndMultiDate").is(':visible');
                if (multipleDaysMode == true) {
                    if (arg.event.title == 'multi-select') {
                        arg.event.remove();
                    } else {
                        calendarObj.addEvent({
                            title: 'multi-select',
                            start: arg.event._instance.range.end
                            //end: arg.end
                        });
                    }

                    calendarObj.unselect();
                } else {
                    var startDate = arg.event._instance.range.start;
                    var endDate = arg.event._instance.range.end;
                    var dateInfo = getDateInfo(endDate);
                    selectDatePopup($(calendarEl), startDate, startDate, null, dateInfo.LocationType, dateInfo.LocationValue, dateInfo.Purpose, dateInfo.OverlapBusinessMeal);
                }
            },
            select: function (arg) {
                console.log(arg);
                $('#exampleModal').modal('show');
               
            },
            editable: false
    });

    calendar.render();

    // Handle day-of-week toggles
    document.querySelectorAll('.day-toggle').forEach(checkbox => {
      checkbox.addEventListener('change', () => {
        visibleDays = Array.from(document.querySelectorAll('.day-toggle'))
          .filter(cb => cb.checked)
          .map(cb => parseInt(cb.value));

        const hiddenDays = [0,1,2,3,4,5,6].filter(d => !visibleDays.includes(d));
        calendar.setOption('hiddenDays', hiddenDays);
      });
    });

   
</script>