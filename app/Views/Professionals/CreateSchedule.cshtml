@model scheapp.app.Models.View.CreateProfessionalScheduleVM
@using scheapp.app.Models.Data.DspModels
@{
    ProfessionalBusinessDetailDsp businessProfessional = (ProfessionalBusinessDetailDsp)ViewBag.BusinessProfessional;
    ViewData["Title"] = "Schedules";
    if (businessProfessional.ProfessionalRole == "business_admin")
    {
        Layout = "_BusinessLayout";
    }
    else if (businessProfessional.ProfessionalRole == "business_professional")
    {
        Layout = "_ProfessionalLayout";
    }
}

<h1>Create Schedule For</h1>

<h4>@Model.FirstName @Model.LastName</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @Html.HiddenFor(Model => Model.BusinessId,new { Id="hdnBusinessId_CreateSchedule"})
        @Html.HiddenFor(Model => Model.ProfessionalId, new { Id = "hdnProfessionalId_CreateSchedule" })
        <div class="form-group mb-4">
            <label>Start Date</label>
            <input type="date" class="form-control" id="txtbxStartDT_CreateSchedule" onchange="Validate_CreateSchedule()" />
            <label>Start Time</label>
            @Html.DropDownList("Select Time", Model.TimeSelectList, "Select Time", new { @id = "ddlStartTime_CreateSchedule", @class = "form-control", @onchange = "Validate_CreateSchedule();" })
        </div>
        <div class="form-group mb-4">
            <label>End Date</label>
            <input type="date" class="form-control"  id="txtbxEndDT_CreateSchedule" onchange="Validate_CreateSchedule()" />
            <label>End Time</label>
            @Html.DropDownList("Select Time", Model.TimeSelectList, "Select Time", new { @id = "ddlEndTime_CreateSchedule", @class = "form-control", @onchange = "Validate_CreateSchedule();" })
        </div>
        </div>
        <div class="form-group">
            <input type="submit" id="btnSubmit_CreateSchedule" value="Create" onclick="ConfirmAndCreate();" class="btn btn-primary" disabled />
        </div>
    </div>
</div>
<script>
    var startDateTime;
    var endDateTime;
    function Validate_CreateSchedule() {
        let stDate = $("#txtbxStartDT_CreateSchedule").val();
        let enDate = $("#txtbxEndDT_CreateSchedule").val();
        let startTime = $("#ddlStartTime_CreateSchedule").val();
        let endTime = $("#ddlEndTime_CreateSchedule").val();
        if (stDate !== "" && enDate != "" && startTime != "" && endTime!="") {

            startDateTime = stDate  + startTime;
            endDateTime = enDate  + endTime;

            if (new Date(startDateTime) < new Date(endDateTime))
                $("#btnSubmit_CreateSchedule").removeAttr("disabled");
            else {
                Swal.fire({
                    title: "Start datetime cannot be equal or after end datetime.",
                    text: "Please enter start datetime before end datetime.",
                    icon: "error"
                });
                $("#btnSubmit_CreateSchedule").prop('disabled', true);
            }
        }
    }
    function ConfirmAndCreate(proScheId) {
        Swal.fire({
            title: "Are you sure?",
            text: "You will be adding new availability to schedule appointment system!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, create it!"
        }).then((result) => {
            if (result.isConfirmed) {
                var reqObj = new Object();
                reqObj.BusinessId = $("#hdnBusinessId_CreateSchedule").val();
                reqObj.ProfessionalId = $("#hdnProfessionalId_CreateSchedule").val();
                reqObj.StartDT = startDateTime;
                reqObj.EndDT = endDateTime;
                console.log(reqObj)
                $.ajax({
                        'url': '/ProfessionalsData/SaveProfessionalSchedules',
                        'contentType': "application/json",
                        'type': 'POST',
                        'data': JSON.stringify(reqObj),
                        'success': function () {
                                        Swal.fire({
                                            position: "top-end",
                                            icon: "success",
                                            title: "New schedule created",
                                            showConfirmButton: false,
                                            timer: 1500
                                        }).then(function () {
                                            window.location.href = "/Professionals/Schedules?businessId=" + reqObj.BusinessId + "&professionalId=" + reqObj.ProfessionalId + ""
                                        });
                                    },
                        'error': function (request, error) {
                            alert("Request: " + JSON.stringify(request));
                        }
                    });
            }
        });
    }
</script>