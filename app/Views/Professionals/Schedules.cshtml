@model scheapp.app.Models.View.ProfessionalScheduleVM
@using scheapp.app.Models.Data.DspModels
@{
    ProfessionalBusinessDetailDsp businessProfessional = (ProfessionalBusinessDetailDsp)ViewBag.BusinessProfessional;
    ViewData["Title"] = "Schedules";
    if (businessProfessional.ProfessionalRole == "business_admin")
    {
        Layout = "_BusinessLayout";
    }
    else if (businessProfessional.ProfessionalRole == "business_professional")
    {
        Layout = "_ProfessionalLayout";
    }
}

@{
    Layout = "_BusinessLayout";
}

<div id="toolbar">
    <button id="remove"
            class="btn btn-danger"
            disabled>
        <i class="fa fa-trash"></i> Delete
    </button>
</div>
<table id="table"
       data-toolbar="#toolbar"
       data-search="true"
       data-show-refresh="true"
       data-show-toggle="true"
       data-show-fullscreen="true"
       data-show-columns="true"
       data-show-columns-toggle-all="true"
       data-detail-view="true"
       data-show-export="true"
       data-click-to-select="true"
       data-detail-formatter="detailFormatter"
       data-minimum-count-columns="2"
       data-show-pagination-switch="true"
       data-pagination="true"
       data-id-field="id"
       data-page-list="[10, 25, 50, 100, all]"
       data-show-footer="true"
@* data-side-pagination="server" *@
       data-side-pagination="client"
       data-url="/ProfessionalsData/GetSchedules?businessId=3&professionalId=8"
       data-response-handler="responseHandler">
</table>

<script>
    const $table = $('#table')
    const $remove = $('#remove')
    let selections = []

    function getIdSelections () {
      return $.map($table.bootstrapTable('getSelections'), function (row) {
        return row.id
      })
    }

    window.responseHandler = res => {
        console.log(res);
      $.each(res.rows, function (i, row) {
        row.state = $.inArray(row.id, selections) !== -1
      })
      console.log(res)
      return res
    }

    window.detailFormatter = (index, row) => {
      const html = []

      $.each(row, function (key, value) {
        html.push(`<p><b>${key}:</b> ${value}</p>`)
      })
      return html.join('')
    }

    function operateFormatter () {
      return [
        '<a class="scheapp-edit-action" href="javascript:void(0)" title="Edit">',
        '<i class="fa fa-edit"></i>',
        '</a>'
      ].join('')
    }

    window.operateEvents = {      
      'click .scheapp-edit-action' (e, value, row) {
        alert(`show editing modal`)
      }
    }

    function totalTextFormatter () {
      return 'Total'
    }

    function totalNameFormatter (data) {
      return data.length
    }

    function totalPriceFormatter (data) {
      const field = this.field

      return `$${data.map(function (row) {
        return +row[field].substring(1)
      }).reduce(function (sum, i) {
        return sum + i
      }, 0)}`
    }

    function initTable () {
      $table.bootstrapTable('destroy').bootstrapTable({
        height: 550,
        width:1000,
        locale: "en-US", //language US English
        columns: [
          [
            {
              field: 'state',
              checkbox: true,
              rowspan: 2,
              align: 'center',
              valign: 'middle'
            },
            {
              title: 'ID',
              field: 'id',
              rowspan: 2,
              align: 'center',
              valign: 'middle',
              sortable: true,
              footerFormatter: totalTextFormatter
            },
            {
              title: 'Schedule Detail',
              colspan: 5,
              align: 'center'
            }
          ],
          [
            {
              field: 'startDate',
              title: 'Start Date',
              sortable: true,
              footerFormatter: totalNameFormatter,
              align: 'center'
            },
            {
              field: 'startTime',
              title: 'Start Time',
              align: 'center'
            },
            {
              field: 'endDate',
              title: 'End Date',
              align: 'center',
              sortable: true,
            },
            {
              field: 'endTime',
              title: 'End Time',
              align: 'center',
              sortable: true,
            },
            {
              field: 'operate',
              title: 'Edit Schedule',
              align: 'center',
              clickToSelect: false,
              events: window.operateEvents,
              formatter: operateFormatter
            }
          ]
        ]
      })
      $table.on('check.bs.table uncheck.bs.table ' +
        'check-all.bs.table uncheck-all.bs.table',
      function () {
        $remove.prop('disabled', !$table.bootstrapTable('getSelections').length)

        // save your data, here just save the current page
        selections = getIdSelections()
        console.log(selections);
        // push or splice the selections if you want to save all data selections
      })
      $table.on('all.bs.table', function (e, name, args) {
        console.log(name, args)
      })
      $remove.click(function () {
        const ids = getIdSelections()

        $table.bootstrapTable('remove', {
          field: 'id',
          values: ids
        })
        $remove.prop('disabled', true)
      })
    }

    $(function() {
      initTable()

      $('#locale').change(initTable)
    })
</script>

<style>
    .select,
    #locale {
        width: 100%;
    }

    .like {
        margin-right: 10px;
    }
</style>